name: '[Full Build - Linux (Ubuntu 20,22,24), Windows32, Windows64, MacOS]'

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  release:
    types: [published]

jobs:
  macos13:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4

      - name: git config credential.helper
        run: git config credential.helper

      - name: Brew install base dependencies
        run: |
          brew install --quiet python@3 || brew link --overwrite python@3
          brew install --quiet automake berkeley-db@4 miniupnpc qt@5 gperf qrencode librsvg
          curl -L https://raw.githubusercontent.com/vergecurrency/protobuf261/master/protobuf261.rb > protobuf261.rb
          brew install protobuf261.rb

      - name: Brew install boost from our homebrew deps
        run: |
          curl -L https://raw.githubusercontent.com/vergecurrency/verge/refs/heads/master/depends/homebrew-formulas/boost176.rb > boost176.rb
          brew install boost176.rb

      - name: Brew link dependencies
        run: brew link qt@5 berkeley-db@4 boost176

      - name: Auto generate
        run: ./autogen.sh

      - name: configure
        run: ./configure --disable-bench --disable-tests --disable-dependency-tracking --disable-werror --with-gui --bindir=$(pwd)/release/bin --libdir=$(pwd)/release/lib

      - name: make
        run: make -j4

      - name: make .dmg
        run: make deploy

      - uses: actions/upload-artifact@v4
        with:
          name: verge-macos13
          path: |
            *.dmg

  macos14:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: git config credential.helper
        run: git config credential.helper

      - name: get previous xcode and switch to it
        run: |
          ls -la /Applications/Xcode*
          sudo xcode-select -switch /Applications/Xcode_15.2.app

      - name: Brew install base dependencies
        run: |
          brew install --quiet python@3 || brew link --overwrite python@3
          brew install --quiet automake autoconf berkeley-db@4 pkg-config miniupnpc zeromq libtool qt@5 gperf qrencode librsvg
          curl -L https://raw.githubusercontent.com/vergecurrency/protobuf261/master/protobuf261.rb > protobuf261.rb
          brew install protobuf261.rb

      - name: Brew install boost from our homebrew deps
        run: |
          curl -L https://raw.githubusercontent.com/vergecurrency/verge/refs/heads/master/depends/homebrew-formulas/boost176.rb > boost176.rb
          brew install boost176.rb

      - name: Brew link dependencies
        run: brew link boost176 qt@5 berkeley-db@4

      - name: check cellar for openssl
        run: cd /opt/homebrew/Cellar/openssl@3/ && ls

      - name: which clang/xcode
        run: clang --version

      - name: Auto generate
        run: ./autogen.sh

      - name: configure
        run: |
          export LDFLAGS="-L/opt/homebrew/opt/boost176/lib"
          export CPPFLAGS="-I/opt/homebrew/opt/boost176/include"
          ./configure --disable-bench --disable-tests --disable-dependency-tracking --disable-werror --with-gui --bindir=$(pwd)/release/bin --libdir=$(pwd)/release/lib --with-openssl-dir=/opt/homebrew/Cellar/openssl@3/3.5.2 --with-libevent-dir=/opt/homebrew/Cellar/libevent/2.1.12_1 --with-boost=/opt/homebrew/Cellar/boost176/1.76.0_6

      - name: make
        run: make -j4

      - name: make .dmg
        run: make deploy

      - uses: actions/upload-artifact@v4
        with:
          name: verge-macos14
          path: |
            *.dmg

  ubuntu24:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Update apt repos
        run: sudo apt-get update

      - name: Install base dependencies
        run: sudo apt-get install -y build-essential xutils-dev libtool gperf autotools-dev automake pkg-config bsdmainutils libattr1-dev make automake bison byacc cmake curl g++-multilib binutils-gold python3

      - name: Build depends
        run: cd depends/ && make -j4 HOST=x86_64-linux-gnu

      - name: Auto generate
        run: ./autogen.sh

      - name: configure
        run: CONFIG_SITE=$PWD/depends/x86_64-linux-gnu/share/config.site ./configure --disable-bench --disable-tests --disable-dependency-tracking --disable-werror --prefix=$(pwd)/depends/x86_64-linux-gnu --bindir=$(pwd)/release/bin --libdir=$(pwd)/release/lib

      - name: make
        run: make -j4
       
      - name: strip
        run: |
          strip ./src/verged
          strip ./src/verge-cli
          strip ./src/verge-tx
          strip ./src/qt/verge-qt

      - uses: actions/upload-artifact@v4
        with:
          name: verge-ubuntu24
          path: |
            ./src/verged
            ./src/verge-cli
            ./src/verge-tx
            ./src/qt/verge-qt

  ubuntu22:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Update apt repos
        run: sudo apt-get update

      - name: Install base dependencies
        run: sudo apt-get install -y build-essential xutils-dev libtool gperf autotools-dev automake pkg-config bsdmainutils libattr1-dev make automake bison byacc cmake curl g++-multilib binutils-gold python3

      - name: Build depends
        run: cd depends/ && make -j4 HOST=x86_64-linux-gnu

      - name: Auto generate
        run: ./autogen.sh

      - name: configure
        run: CONFIG_SITE=$PWD/depends/x86_64-linux-gnu/share/config.site ./configure --disable-bench --disable-tests --disable-dependency-tracking --disable-werror --prefix=$(pwd)/depends/x86_64-linux-gnu --bindir=$(pwd)/release/bin --libdir=$(pwd)/release/lib

      - name: make
        run: make -j4
        
      - name: strip
        run: |
          strip ./src/verged
          strip ./src/verge-cli
          strip ./src/verge-tx
          strip ./src/qt/verge-qt

      - uses: actions/upload-artifact@v4
        with:
          name: verge-ubuntu22
          path: |
            ./src/verged
            ./src/verge-cli
            ./src/verge-tx
            ./src/qt/verge-qt

  windows32:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Update apt repos
        run: sudo apt-get update

      - name: Install base dependencies
        run: sudo apt-get install -y build-essential libtool gperf autotools-dev automake pkg-config bsdmainutils curl git bison byacc python3 nsis

      - name: Force Posix
        run: |
          sudo apt-get install -y g++-mingw-w64-i686 mingw-w64-i686-dev
          sudo update-alternatives --set i686-w64-mingw32-g++ /usr/bin/i686-w64-mingw32-g++-posix

      - name: Build depends for MingW32 Cross Compile
        run: PATH=$(echo "$PATH" | sed -e 's/:\/mnt.*//g') && cd depends/ && make HOST=i686-w64-mingw32 -j2

      - name: Auto generate
        run: ./autogen.sh

      - name: configure
        run: CONFIG_SITE=$PWD/depends/i686-w64-mingw32/share/config.site ./configure --prefix=/ --disable-bench --disable-tests

      - name: make
        run: make -j2

      - name: strip
        run: |
          cd ./src && strip verged.exe verge-cli.exe verge-tx.exe
          cd ./qt && strip verge-qt.exe

      - uses: actions/upload-artifact@v4
        with:
          name: verge-windows32
          path: |
            ./src/verged.exe
            ./src/verge-cli.exe
            ./src/verge-tx.exe
            ./src/qt/verge-qt.exe

  windows64:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Update apt repos
        run: sudo apt-get update

      - name: Install base dependencies
        run: sudo apt-get install -y build-essential libtool gperf autotools-dev automake pkg-config bsdmainutils curl git bison byacc python3 nsis

      - name: Force Posix
        run: |
          sudo apt install -y g++-mingw-w64-x86-64
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix

      - name: Build depends for MingW64 Cross Compile
        run: PATH=$(echo "$PATH" | sed -e 's/:\/mnt.*//g') && cd depends/ && make HOST=x86_64-w64-mingw32 -j2

      - name: Auto generate
        run: ./autogen.sh

      - name: configure
        run: CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/ --disable-bench --disable-tests

      - name: make
        run: make -j2

      - name: strip
        run: |
          cd ./src && strip verged.exe verge-cli.exe verge-tx.exe
          cd ./qt && strip verge-qt.exe

      - uses: actions/upload-artifact@v4
        with:
          name: verge-windows64
          path: |
            ./src/verged.exe
            ./src/verge-cli.exe
            ./src/verge-tx.exe
            ./src/qt/verge-qt.exe

  SendReleases:
    runs-on: ubuntu-latest
    needs: [macos13, macos14, ubuntu22, ubuntu24, windows32, windows64]
      env:
      TAG_NAME: v8.0.1
    steps:
      - name: Checkout (full history for changelog/contributors)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate empty Changelog (fallback)
        run: echo "# Changelog" > ${{ github.workspace }}-CHANGELOG.txt

      - uses: actions/download-artifact@v4
        with:
          name: verge-windows32
          path: verge-windows32
      - uses: actions/download-artifact@v4
        with:
          name: verge-windows64
          path: verge-windows64
      - uses: actions/download-artifact@v4
        with:
          name: verge-macos13
          path: verge-macos13
      - uses: actions/download-artifact@v4
        with:
          name: verge-macos14
          path: verge-macos14
      - uses: actions/download-artifact@v4
        with:
          name: verge-ubuntu22
          path: verge-ubuntu22
      - uses: actions/download-artifact@v4
        with:
          name: verge-ubuntu24
          path: verge-ubuntu24

      - name: Create zips
        run: |
          zip -r verge-windows32.zip verge-windows32/
          zip -r verge-windows64.zip verge-windows64/
          zip -r verge-macos13.zip verge-macos13/
          zip -r verge-macos14.zip verge-macos14/
          zip -r verge-ubuntu22.zip verge-ubuntu22/
          zip -r verge-ubuntu24.zip verge-ubuntu24/

      - name: List downloaded artifacts
        run: ls -lR

      - name: sha256
        run: |
          find . -type f -name "*.zip" | LC_ALL=C sort | xargs sha256sum -b > SHA256SUMS.txt
          cat SHA256SUMS.txt

      - name: Derive previous tag and metadata
        id: meta
        shell: bash
        run: |
          set -euo pipefail
          TAG="${TAG_NAME}"
          if git rev-parse -q --verify "refs/tags/${TAG}^{}" >/dev/null 2>&1; then
            PREV_TAG="$(git describe --tags --abbrev=0 "${TAG}^" 2>/dev/null || true)"
            RANGE_START="${PREV_TAG:-$(git rev-list --max-parents=0 HEAD)}"
            RANGE_END="${TAG}"
          else
            PREV_TAG="$(git describe --tags --abbrev=0 2>/dev/null || true)"
            RANGE_START="${PREV_TAG:-$(git rev-list --max-parents=0 HEAD)}"
            RANGE_END="HEAD"
          fi
          COMMIT_SHA="$(git rev-parse --short HEAD)"
          COMMIT_DATE="$(git show -s --format=%cI HEAD)"
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"
          echo "prev_tag=${PREV_TAG}" >> "$GITHUB_OUTPUT"
          echo "range_start=${RANGE_START}" >> "$GITHUB_OUTPUT"
          echo "range_end=${RANGE_END}" >> "$GITHUB_OUTPUT"
          echo "commit_sha=${COMMIT_SHA}" >> "$GITHUB_OUTPUT"
          echo "commit_date=${COMMIT_DATE}" >> "$GITHUB_OUTPUT"

      - name: Build contributors list (names only)
        id: contrib
        shell: bash
        run: |
          set -euo pipefail
          start="${{ steps.meta.outputs.range_start }}"
          end="${{ steps.meta.outputs.range_end }}"
          git shortlog -sn "${start}..${end}" > CONTRIBUTORS.txt || true
          echo "contributors<<EOF" >> "$GITHUB_OUTPUT"
          cat CONTRIBUTORS.txt >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Summarize commits (since previous tag)
        id: commits
        shell: bash
        run: |
          set -euo pipefail
          start="${{ steps.meta.outputs.range_start }}"
          end="${{ steps.meta.outputs.range_end }}"
          {
            echo "### Commits since ${start:0:20}"
            echo
            git log --no-merges --pretty=format:'- %h %ad %an: %s' --date=short "${start}..${end}" || true
            echo
          } > COMMITS.md
          echo "commits<<EOF" >> "$GITHUB_OUTPUT"
          cat COMMITS.md >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Artifact sizes table
        id: sizes
        shell: bash
        run: |
          set -euo pipefail
          {
            echo "| File | Size |"
            echo "|------|------|"
            for f in verge-windows32.zip verge-windows64.zip verge-macos13.zip verge-macos14.zip verge-ubuntu22.zip verge-ubuntu24.zip; do
              if [ -f "$f" ]; then
                sz=$(du -h "$f" | awk '{print $1}')
                echo "| $f | $sz |"
              fi
            done
          } > SIZES.md
          echo "sizes<<EOF" >> "$GITHUB_OUTPUT"
          cat SIZES.md >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Read SHA256SUMS into a variable
        id: checksums
        run: |
          echo "SHA256SUMS<<EOF" >> $GITHUB_OUTPUT
          cat SHA256SUMS.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Compose RELEASE.md
        shell: bash
        run: |
          set -euo pipefail
          {
            echo "# Verge Core ${TAG_NAME}"
            echo
            echo "**Commit:** ${{ steps.meta.outputs.commit_sha }} &nbsp;&nbsp; **Date:** ${{ steps.meta.outputs.commit_date }}"
            if [ -n "${{ steps.meta.outputs.prev_tag }}" ]; then
              echo "**Changes since:** ${{ steps.meta.outputs.prev_tag }}"
            fi
            echo
            echo "## Downloads"
            echo
            cat SIZES.md
            echo
            echo "## SHA256 Checksums:"
            echo
            echo '```txt'
            cat SHA256SUMS.txt
            echo '```'
            echo
            echo "## Contributors: "
            echo
            if [ -s CONTRIBUTORS.txt ]; then
              awk '{c=$1; $1=""; sub(/^ /,""); print "- " $0 "  _(commits: " c ")_"}' CONTRIBUTORS.txt
            else
              echo "_No contributor deltas in this range_"
            fi
            echo
            echo "## Commit Summary"
            echo
            cat COMMITS.md
            echo
            echo "## Notes"
            echo "- Release artifacts are built via automated, cached CI across Windows, macOS (Intel/Apple Silicon), and Linux."
            echo "- Each artifact above is produced from the exact commit listed and can be verified with the checksums."
          } > RELEASE.md
          sed -n '1,200p' RELEASE.md

      - name: Push zips to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: |
            verge-windows32.zip
            verge-windows64.zip
            verge-macos13.zip
            verge-macos14.zip
            verge-ubuntu22.zip
            verge-ubuntu24.zip
            SHA256SUMS.txt
          body_path: RELEASE.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
